#!/bin/bash
#
# Reads CSV config file for device & MAC address pairs

CONFIG_FILE="${HOME}/.config/bluetooth/devices.csv"
MAX_RETRIES=1

check_bluetooth_service() {
    if ! systemctl is-active --quiet bluetooth; then
        printf "Bluetooth service is not running. Starting the service...\n"
        sudo systemctl start bluetooth
    fi
}

forget_device() {
    local mac_address=$1
    printf "Forgetting device with MAC Address: $mac_address\n"
    bluetoothctl remove "$mac_address" >/dev/null 2>&1
}

perform_bluetooth_scan() {
    printf "Performing Bluetooth scan for 10 seconds...\n"
    bluetoothctl --timeout=10 scan on
}

connect_to_device() {
    local mac_address=$1
    printf "Connecting to device with MAC Address: $mac_address\n"
    bluetoothctl --timeout=5 connect "$mac_address"
}

# Main script

if [ $# -eq 0 ]; then
    printf "Usage: $0 <device_name>\n"
    exit 1
fi

device_name=$1
mac_address=$(grep -i "^$device_name," ${CONFIG_FILE} | cut -d',' -f2)

if [ -z "$mac_address" ]; then
    printf "Device '$device_name' not found in the config file.\n"
    exit 1
fi

check_bluetooth_service
forget_device "$mac_address"
perform_bluetooth_scan

retry_count=0
while true; do
    connect_to_device "$mac_address"
    if bluetoothctl info "$mac_address" | grep -q "Connected: yes"; then
        printf "Connected to device '$device_name' with MAC Address: $mac_address\n"
        break
    fi

    retry_count=$((retry_count + 1))
    if [ $retry_count -eq $MAX_RETRIES ]; then
        printf "Failed to connect to device '$device_name' after multiple attempts.\n"
        exit 1
    fi

    printf "Failed to connect. Retrying...\n"
    sleep 1
done
