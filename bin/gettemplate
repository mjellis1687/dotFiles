#!/bin/sh

# Author: Matthew Ellis

usage() {
	# Print usage
	echo "Copy the template file into a specified directory"
	echo
	echo "Syntax: gettemplate [-h|-l|-t [TEMPLATE]|-n [OUTPUT]|-m|-d [DIR]]"
	echo
	echo "options:"
	echo "  h	Print this help"
	echo "  l	List all templates"
	echo "  s	List all skeletons"
	echo "  t	Template to get"
	echo "  n	Rename template file to"
	echo "  m	Include generic Makefile"
	echo "  d	Directory to copy file(s) into (default: current directory)"
}

SEARCH_DIR=$HOME/Templates
DIR=`pwd`
INC_MAKE=false
TEMPLATE=
OUTPUT=

list_all_templates() {
	ls ${SEARCH_DIR}/pandoc-templates
}

list_all_skeletons() {
	ls ${SEARCH_DIR}/markdown
}

while getopts "d:t:n:mlsh" opt; do
	case "$opt" in
		h)
			usage
			exit 0
			;;
		l)
			list_all_templates
			exit 0
			;;
		s)
			list_all_skeletons
			exit 0
			;;
		t)	TEMPLATE="$OPTARG"
			;;
		n)	OUTPUT="$OPTARG"
			;;
		m)	INC_MAKE=true
			;;
		m)	DIR="$OPTARG"
			;;
		*)
			usage
			echo "Invalid option provided"
			exit 1
	esac
done

[ -z "$TEMPLATE" ] && [ "$INC_MAKE" == false ] && echo "No arguments provided" && usage
[ ! -z "$TEMPLATE" ] && cp `find "$SEARCH_DIR" -type f -not -path "$SEARCH_DIR/pandoc/*" -name "$TEMPLATE"` "$DIR"/"$OUTPUT"
[ "$INC_MAKE" == true ] && cp $SEARCH_DIR/Makefile .
